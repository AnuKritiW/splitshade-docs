import{_ as t,c as a,o as i,ae as r}from"./chunks/framework.DmqzXzOt.js";const c=JSON.parse('{"title":"What is Splitshade?","description":"","frontmatter":{},"headers":[],"relativePath":"introduction/what-is.md","filePath":"introduction/what-is.md"}'),o={name:"introduction/what-is.md"};function s(n,e,l,d,h,p){return i(),a("div",null,e[0]||(e[0]=[r('<h1 id="what-is-splitshade" tabindex="-1">What is Splitshade? <a class="header-anchor" href="#what-is-splitshade" aria-label="Permalink to &quot;What is Splitshade?&quot;">​</a></h1><p><strong>Splitshade</strong> is a lightweight, browser-based playground for writing and visualizing <a href="https://www.w3.org/TR/WGSL/" target="_blank" rel="noreferrer"><code>WGSL</code></a> shaders using <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API" target="_blank" rel="noreferrer">WebGPU</a>. Designed for rapid iteration and creative exploration, Splitshade makes it easy to develop and debug fragment shaders with real-time feedback -- all from within your browser.</p><p>Whether you&#39;re experimenting with visual effects or learning how modern GPU pipelines work, <strong>Splitshade</strong> provides an interactive environment tailored for shader development.</p><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><ul><li>Live-editing support for both fragment and vertex shaders</li><li>Real-time preview powered by WebGPU</li><li>Built-in <a href="./../uniforms/iTime.html">uniforms</a> such as <code>iTime</code>, <code>iResolution</code>, and <code>iMouse</code></li><li>Interactive <a href="./../textures/usage.html">texture upload system</a> with support for multiple channels</li><li>Integrated <a href="./../meshes/usage.html">mesh visualization</a> with <code>.obj</code> support</li><li>Fast iteration with instant reloading and error feedback</li></ul><h2 id="who-is-it-for" tabindex="-1">Who is it for? <a class="header-anchor" href="#who-is-it-for" aria-label="Permalink to &quot;Who is it for?&quot;">​</a></h2><p><strong>Splitshade</strong> is designed for:</p><ul><li>Shader authors and creative coders</li><li>Graphics programmers experimenting with <code>WGSL</code></li><li>Technical artists building visual prototypes</li><li>Students learning WebGPU and GPU programming concepts</li></ul><p>If you&#39;ve ever used <a href="https://www.shadertoy.com/" target="_blank" rel="noreferrer">Shadertoy</a> or tried authoring <code>GLSL</code> shaders and want to explore the next generation of GPU tools, Splitshade is for you.</p><h2 id="common-use-cases" tabindex="-1">Common Use Cases <a class="header-anchor" href="#common-use-cases" aria-label="Permalink to &quot;Common Use Cases&quot;">​</a></h2><ul><li>Prototyping visual effects in WGSL</li><li>Exploring the <a href="https://gpuweb.github.io/gpuweb/" target="_blank" rel="noreferrer">WebGPU shading pipeline</a></li><li>Learning GPU concepts through code</li><li>Testing how textures and geometry interact with custom shaders</li><li>Building shader demos</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Ready to dive in? Head to <a href="./../introduction/getting-started.html">Getting Started</a> to learn how the playground works and start writing your first shader.</p>',13)]))}const g=t(o,[["render",s]]);export{c as __pageData,g as default};
