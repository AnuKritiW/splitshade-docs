import{_ as a,c as t,o as n,ae as s}from"./chunks/framework.DmqzXzOt.js";const p=JSON.parse('{"title":"Usage","description":"","frontmatter":{},"headers":[],"relativePath":"textures/usage.md","filePath":"textures/usage.md"}'),o={name:"textures/usage.md"};function r(i,e,l,u,h,d){return n(),t("div",null,e[0]||(e[0]=[s('<h1 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h1><p>This guide shows how to assign and manage textures using the Splitshade interface.</p><p>To understand what textures are and how they’re used in rendering, see <a href="./what-are.html">What are Textures</a>.<br> To use textures in your WGSL shader code, see <a href="./../uniforms/iChannel.html">iChannel0–iChannel3</a>.</p><h2 id="assigning-textures-in-the-ui" tabindex="-1">Assigning Textures in the UI <a class="header-anchor" href="#assigning-textures-in-the-ui" aria-label="Permalink to &quot;Assigning Textures in the UI&quot;">​</a></h2><p>In the <strong>Textures Panel</strong> below the editor, you can assign images to one of four channels:</p><ul><li><code>iChannel0</code>, <code>iChannel1</code>, <code>iChannel2</code>, <code>iChannel3</code></li></ul><p>For each channel, you can:</p><ul><li><strong>Use a built-in preset</strong> – choose from several default textures.</li><li><strong>Upload your own image</strong> – select a file from your computer.</li><li><strong>Swap or clear textures</strong> – click the thumbnail to update or remove.</li></ul><p>These textures are automatically made available in your shader through the corresponding <code>iChannelN</code> uniforms.</p><blockquote><p>Tip: Each assigned texture also includes a <code>sampler</code>, so you can use <code>textureSample(iChannel0, iChannel0Sampler, uv)</code> in your shader.</p></blockquote><hr><p>Need help with the WGSL syntax? Head to the <a href="/splitshade-docs/uniforms/iChannel.html">iChannel</a> page for full examples.</p>',12)]))}const g=a(o,[["render",r]]);export{p as __pageData,g as default};
